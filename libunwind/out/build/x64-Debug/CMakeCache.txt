# This is the CMakeCache file.
# For build in directory: c:/Users/Krystian/src/llvm-project/libunwind/out/build/x64-Debug
# It was generated by CMake: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//ASM compiler
CMAKE_ASM_COMPILER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.25.28610/bin/Hostx64/x64/cl.exe

//Flags used by the ASM compiler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the ASM compiler during DEBUG builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=

//Flags used by the ASM compiler during MINSIZEREL builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the ASM compiler during RELEASE builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=

//Flags used by the ASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Debug

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.25.28610/bin/Hostx64/x64/cl.exe

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//No help, variable specified on the command line.
CMAKE_C_COMPILER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.25.28610/bin/HostX64/x64/cl.exe

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//No help, variable specified on the command line.
CMAKE_INSTALL_PREFIX:PATH=C:/Users/Krystian/src/llvm-project/libunwind/out/install/x64-Debug

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.25.28610/bin/Hostx64/x64/link.exe

//make program
CMAKE_MAKE_PROGRAM:FILEPATH=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.18362.0/x64/mt.exe

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=libunwind

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.18362.0/x64/rc.exe

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Build 32 bit libunwind
LIBUNWIND_BUILD_32_BITS:BOOL=OFF

//Enable unwinding support for ARM WMMX registers.
LIBUNWIND_ENABLE_ARM_WMMX:BOOL=OFF

//Enable assertions independent of build mode.
LIBUNWIND_ENABLE_ASSERTIONS:BOOL=ON

//Enable cross-platform unwinding support.
LIBUNWIND_ENABLE_CROSS_UNWINDING:BOOL=OFF

//Compile with pedantic enabled.
LIBUNWIND_ENABLE_PEDANTIC:BOOL=ON

//Build libunwind as a shared library.
LIBUNWIND_ENABLE_SHARED:BOOL=ON

//Build libunwind as a static library.
LIBUNWIND_ENABLE_STATIC:BOOL=ON

//Build libunwind with threading support.
LIBUNWIND_ENABLE_THREADS:BOOL=ON

//Fail and stop if a warning is triggered.
LIBUNWIND_ENABLE_WERROR:BOOL=OFF

//GCC toolchain for cross compiling.
LIBUNWIND_GCC_TOOLCHAIN:PATH=

//Do not export any symbols from the static library.
LIBUNWIND_HERMETIC_STATIC_LIBRARY:BOOL=OFF

//Build the libunwind documentation.
LIBUNWIND_INCLUDE_DOCS:BOOL=OFF

//Install the libunwind library.
LIBUNWIND_INSTALL_LIBRARY:BOOL=ON

//Define libunwind destination prefix.
LIBUNWIND_INSTALL_PREFIX:STRING=

//Install the shared libunwind library.
LIBUNWIND_INSTALL_SHARED_LIBRARY:BOOL=ON

//Install the static libunwind library.
LIBUNWIND_INSTALL_STATIC_LIBRARY:BOOL=ON

//Define suffix of library directory name (32/64)
LIBUNWIND_LIBDIR_SUFFIX:STRING=

//Sysroot for cross compiling.
LIBUNWIND_SYSROOT:PATH=

//Target triple for cross compiling.
LIBUNWIND_TARGET_TRIPLE:STRING=

//Additional compiler flags for test programs.
LIBUNWIND_TEST_COMPILER_FLAGS:STRING=

//Additional linker flags for test programs.
LIBUNWIND_TEST_LINKER_FLAGS:STRING=

//Use compiler-rt instead of libgcc
LIBUNWIND_USE_COMPILER_RT:BOOL=OFF

//Use weak references to refer to pthread functions.
LIBUNWIND_WEAK_PTHREAD_LIB:BOOL=OFF

//Path to LLVM build tree
LLVM_BINARY_DIR:PATH=C:/Users/Krystian/src/llvm-project/build

//Build LLVM and tools with PGO instrumentation. May be specified
// as IR or Frontend
LLVM_BUILD_INSTRUMENTED:STRING=OFF

//Build LLVM and tools with Code Coverage instrumentation
LLVM_BUILD_INSTRUMENTED_COVERAGE:BOOL=OFF

//Path to a program.
LLVM_CONFIG_PATH:FILEPATH=C:/Users/Krystian/src/llvm-project/build/bin/llvm-config.exe

//Enable Exception handling
LLVM_ENABLE_EH:BOOL=OFF

//Disable optional build system features that cause problems for
// IDE generators
LLVM_ENABLE_IDE:BOOL=OFF

//Build LLVM and tools with IR PGO instrumentation (deprecated)
LLVM_ENABLE_IR_PGO:BOOL=OFF

//Build LLVM with LTO. May be specified as Thin or Full to use
// a particular kind of LTO
LLVM_ENABLE_LTO:STRING=OFF

//OFF
LLVM_ENABLE_PDB:BOOL=OFF

//Enable run time type information
LLVM_ENABLE_RTTI:BOOL=OFF

//Export symbols from LLVM tools so that plugins can import them
LLVM_EXPORT_SYMBOLS_FOR_PLUGINS:BOOL=OFF

//Enable statistics collection for builds that wouldn't normally
// enable it
LLVM_FORCE_ENABLE_STATS:BOOL=OFF

//Path to llvm/include
LLVM_INCLUDE_DIR:PATH=C:/Users/Krystian/src/llvm-project/llvm/include

//Default options for lit
LLVM_LIT_ARGS:STRING=-sv --no-progress-bar

//Path to GnuWin32 tools
LLVM_LIT_TOOLS_DIR:PATH=

//Path to LLVM source tree
LLVM_MAIN_SRC_DIR:PATH=C:/Users/Krystian/src/llvm-project/llvm

//Define the maximum number of concurrent compilation jobs (Ninja
// only).
LLVM_PARALLEL_COMPILE_JOBS:STRING=

//Define the maximum number of concurrent link jobs (Ninja only).
LLVM_PARALLEL_LINK_JOBS:STRING=

//Use prefix for sources
LLVM_SOURCE_PREFIX:STRING=

//Specify VC++ CRT to use for Debug configurations.
LLVM_USE_CRT_DEBUG:STRING=MDd

//Build LLVM using the experimental new pass manager
LLVM_USE_NEWPM:BOOL=OFF

//Use relative paths in debug info
LLVM_USE_RELATIVE_PATHS_IN_DEBUG_INFO:BOOL=OFF

//Use relative paths in sources and debug info
LLVM_USE_RELATIVE_PATHS_IN_FILES:BOOL=OFF

//Value Computed by CMake
libunwind_BINARY_DIR:STATIC=C:/Users/Krystian/src/llvm-project/libunwind/out/build/x64-Debug

//Value Computed by CMake
libunwind_SOURCE_DIR:STATIC=C:/Users/Krystian/src/llvm-project/libunwind


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_ASM_COMPILER
CMAKE_ASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/Krystian/src/llvm-project/libunwind/out/build/x64-Debug
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=16
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=19112601
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/Krystian/src/llvm-project/libunwind
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=2
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.16
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Have library c
LIBUNWIND_HAS_C_LIB:INTERNAL=
//Have library dl
LIBUNWIND_HAS_DL_LIB:INTERNAL=
//Have library gcc
LIBUNWIND_HAS_GCC_LIB:INTERNAL=
//Have library gcc_s
LIBUNWIND_HAS_GCC_S_LIB:INTERNAL=
//Test LIBUNWIND_HAS_NODEFAULTLIBS_FLAG
LIBUNWIND_HAS_NODEFAULTLIBS_FLAG:INTERNAL=
//Test LIBUNWIND_HAS_NOSTDINCXX_FLAG
LIBUNWIND_HAS_NOSTDINCXX_FLAG:INTERNAL=
//Have library pthread
LIBUNWIND_HAS_PTHREAD_LIB:INTERNAL=
//Test LIBUNWIND_SUPPORTS_EHSC_FLAG
LIBUNWIND_SUPPORTS_EHSC_FLAG:INTERNAL=1
//Test LIBUNWIND_SUPPORTS_FNO_EXCEPTIONS_FLAG
LIBUNWIND_SUPPORTS_FNO_EXCEPTIONS_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_FNO_RTTI_FLAG
LIBUNWIND_SUPPORTS_FNO_RTTI_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_FSTRICT_ALIASING_FLAG
LIBUNWIND_SUPPORTS_FSTRICT_ALIASING_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_FUNWIND_TABLES_FLAG
LIBUNWIND_SUPPORTS_FUNWIND_TABLES_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_NODEFAULTLIBS_FLAG
LIBUNWIND_SUPPORTS_NODEFAULTLIBS_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_PEDANTIC_FLAG
LIBUNWIND_SUPPORTS_PEDANTIC_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WALL_FLAG
LIBUNWIND_SUPPORTS_WALL_FLAG:INTERNAL=1
//Test LIBUNWIND_SUPPORTS_WCHAR_SUBSCRIPTS_FLAG
LIBUNWIND_SUPPORTS_WCHAR_SUBSCRIPTS_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WCONVERSION_FLAG
LIBUNWIND_SUPPORTS_WCONVERSION_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG
LIBUNWIND_SUPPORTS_WERROR_EQ_RETURN_TYPE_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WMISMATCHED_TAGS_FLAG
LIBUNWIND_SUPPORTS_WMISMATCHED_TAGS_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WMISSING_BRACES_FLAG
LIBUNWIND_SUPPORTS_WMISSING_BRACES_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WNEWLINE_EOF_FLAG
LIBUNWIND_SUPPORTS_WNEWLINE_EOF_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WNO_ERROR_FLAG
LIBUNWIND_SUPPORTS_WNO_ERROR_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WNO_UNUSED_FUNCTION_FLAG
LIBUNWIND_SUPPORTS_WNO_UNUSED_FUNCTION_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WSHADOW_FLAG
LIBUNWIND_SUPPORTS_WSHADOW_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WSHORTEN_64_TO_32_FLAG
LIBUNWIND_SUPPORTS_WSHORTEN_64_TO_32_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WSIGN_COMPARE_FLAG
LIBUNWIND_SUPPORTS_WSIGN_COMPARE_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WSIGN_CONVERSION_FLAG
LIBUNWIND_SUPPORTS_WSIGN_CONVERSION_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WSTRICT_ALIASING_EQ_2_FLAG
LIBUNWIND_SUPPORTS_WSTRICT_ALIASING_EQ_2_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WSTRICT_OVERFLOW_EQ_4_FLAG
LIBUNWIND_SUPPORTS_WSTRICT_OVERFLOW_EQ_4_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WUNDEF_FLAG
LIBUNWIND_SUPPORTS_WUNDEF_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WUNUSED_PARAMETER_FLAG
LIBUNWIND_SUPPORTS_WUNUSED_PARAMETER_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WUNUSED_VARIABLE_FLAG
LIBUNWIND_SUPPORTS_WUNUSED_VARIABLE_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WWRITE_STRINGS_FLAG
LIBUNWIND_SUPPORTS_WWRITE_STRINGS_FLAG:INTERNAL=
//Test LIBUNWIND_SUPPORTS_WX_FLAG
LIBUNWIND_SUPPORTS_WX_FLAG:INTERNAL=1
//Test LIBUNWIND_SUPPORTS_W_FLAG
LIBUNWIND_SUPPORTS_W_FLAG:INTERNAL=
//Have symbol __arm__
LIBUNWIND_TARGET_ARM:INTERNAL=
//Have symbol __ARM_DWARF_EH__
LIBUNWIND_USES_DWARF_EH:INTERNAL=
//Have symbol __USING_SJLJ_EXCEPTIONS__
LIBUNWIND_USES_SJLJ_EXCEPTIONS:INTERNAL=
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED
LLVM_BUILD_INSTRUMENTED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED_COVERAGE
LLVM_BUILD_INSTRUMENTED_COVERAGE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_ENABLE_IR_PGO
LLVM_ENABLE_IR_PGO-ADVANCED:INTERNAL=1
//STRINGS property for variable: LLVM_USE_CRT_DEBUG
LLVM_USE_CRT_DEBUG-STRINGS:INTERNAL=MD;MDd;MT;MTd
//ADVANCED property for variable: LLVM_USE_NEWPM
LLVM_USE_NEWPM-ADVANCED:INTERNAL=1
//Have symbol os_signpost_interval_begin
macos_signposts_available:INTERNAL=

